/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.gestionturnoshospital;
import java.util.logging.Logger;
import javax.swing.*;
import java.time.LocalDate;
import java.time.format.DateTimeParseException;
/**
 *
 * @author samuelastudillo
 */
public class GestionEnfermeras extends javax.swing.JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(GestionEnfermeras.class.getName());
    private final EnfermeraService enfSvc;
    private DlgListarEnfermeras dlgLista;

    /**
     * Creates new form GestionEnfermeras
     */
    public GestionEnfermeras(java.awt.Dialog parent, boolean modal, EnfermeraService enfSvc) {
        super(parent, modal);
        this.enfSvc = enfSvc;   // ✅ ahora sí tienes la instancia aquí
        initComponents();
        btnGestionarDisponibilidad.addActionListener(e -> btnGestionarDisponibilidadActionPerformed(null));
        pack();
        setLocationRelativeTo(parent);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnAgregarE = new javax.swing.JButton();
        btnEditarE = new javax.swing.JButton();
        btnEliminarE = new javax.swing.JButton();
        btnListarE = new javax.swing.JButton();
        btnGestionarDisponibilidad = new javax.swing.JButton();
        btnVolver = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Gestion Enfermeras");

        btnAgregarE.setText("Agregar");
        btnAgregarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarEActionPerformed(evt);
            }
        });

        btnEditarE.setText("Editar");
        btnEditarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarEActionPerformed(evt);
            }
        });

        btnEliminarE.setText("Eliminar");
        btnEliminarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEActionPerformed(evt);
            }
        });

        btnListarE.setText("Listar");
        btnListarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarEActionPerformed(evt);
            }
        });

        btnGestionarDisponibilidad.setText("Gestionar Disponibilidad");
        btnGestionarDisponibilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGestionarDisponibilidadActionPerformed(evt);
            }
        });

        btnVolver.setText("Volver");
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap(140, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVolver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGestionarDisponibilidad, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnListarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregarE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(btnAgregarE)
                .addGap(18, 18, 18)
                .addComponent(btnEditarE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminarE)
                .addGap(18, 18, 18)
                .addComponent(btnListarE)
                .addGap(18, 18, 18)
                .addComponent(btnGestionarDisponibilidad)
                .addGap(18, 18, 18)
                .addComponent(btnVolver)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarEActionPerformed
        var dlg = new DlgEditarEnfermera(this, true, enfSvc);
        dlg.setVisible(true);
        if (dlgLista != null && dlgLista.isShowing()) {
            dlgLista.cargarTabla();
        }
    }//GEN-LAST:event_btnEditarEActionPerformed

    private void btnListarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarEActionPerformed
        if (dlgLista == null || !dlgLista.isShowing()) {
        dlgLista = new DlgListarEnfermeras(this, false, enfSvc); // no modal para poder verla/actualizarla
    }
        dlgLista.setLocationRelativeTo(this);
        dlgLista.setVisible(true);
        dlgLista.cargarTabla();
       
    }//GEN-LAST:event_btnListarEActionPerformed

    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        dispose();
    }//GEN-LAST:event_btnVolverActionPerformed

    private void btnAgregarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarEActionPerformed
        AgregarEnfermera agregar = new AgregarEnfermera(this,true,enfSvc);
        agregar.setLocationRelativeTo(this);
        agregar.setVisible(true);
    }//GEN-LAST:event_btnAgregarEActionPerformed

    private void btnEliminarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEActionPerformed
        var dlg = new DlgEliminarEnfermera(this, true, enfSvc);
        dlg.setVisible(true);
        if (dlgLista != null && dlgLista.isShowing()) dlgLista.cargarTabla();
    }//GEN-LAST:event_btnEliminarEActionPerformed

    private void btnGestionarDisponibilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGestionarDisponibilidadActionPerformed
        String rut = JOptionPane.showInputDialog(this, "RUT de la enfermera:");
        if (rut == null || rut.trim().isEmpty()) return;

        Enfermera e = enfSvc.buscarPorRut(rut);
        if (e == null) {
            JOptionPane.showMessageDialog(this, "No existe una enfermera con ese RUT.");
            return;
        }

        JTextField tfFecha = new JTextField(LocalDate.now().toString()); // yyyy-MM-dd
        JComboBox<String> cbBloque = new JComboBox<>(new String[]{"MANANA","TARDE","NOCHE"});
        JTextField tfArea = new JTextField(); // ⬅️ NUEVO (opcional)
        JCheckBox chkDisp = new JCheckBox("Disponible", true);

        JPanel p = new JPanel(new java.awt.GridLayout(0,2,6,6));
        p.add(new JLabel("Fecha (yyyy-MM-dd):")); p.add(tfFecha);
        p.add(new JLabel("Bloque:"));             p.add(cbBloque);
        p.add(new JLabel("Área (opcional):"));    p.add(tfArea);          // ⬅️ NUEVO
        p.add(new JLabel(""));                    p.add(chkDisp);

        int r = JOptionPane.showConfirmDialog(
            this, p,
            "Gestionar disponibilidad de " + e.getNombre(),
            JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (r != JOptionPane.OK_OPTION) return;

        LocalDate fecha;
        try {
            fecha = LocalDate.parse(tfFecha.getText().trim());
        } catch (DateTimeParseException ex) {
            JOptionPane.showMessageDialog(this, "Fecha inválida. Formato: yyyy-MM-dd");
            return;
        }

        Bloque bloque;
        try {
            bloque = Bloque.valueOf(cbBloque.getSelectedItem().toString().toUpperCase());
        } catch (IllegalArgumentException ex) {
            JOptionPane.showMessageDialog(this, "Bloque inválido.");
            return;
        }

        String area = tfArea.getText().trim();
        if (area.isBlank()) area = null; // opcional
        boolean disponible = chkDisp.isSelected();

        // ⬅️ GUARDAR **CON ÁREA**
        e.setDisponibilidad(new Disponibilidad(fecha, bloque, area, disponible));

        JOptionPane.showMessageDialog(this,
            "Disponibilidad actualizada:\n" +
            fecha + " " + bloque +
            (area == null ? "" : " (" + area + ")") +
            " → " + (disponible ? "DISPONIBLE" : "NO DISPONIBLE"));
    }//GEN-LAST:event_btnGestionarDisponibilidadActionPerformed
    

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
    // Look & Feel Nimbus (opcional)
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (Exception ex) {
        Logger.getLogger(GestionEnfermeras.class.getName())
              .log(java.util.logging.Level.SEVERE, null, ex);
    }

    // Crear y mostrar el diálogo
    java.awt.EventQueue.invokeLater(() -> {
        // instancia del servicio para esta prueba
        EnfermeraService enfSvc = new EnfermeraService();

        // tu constructor usa Dialog, no Frame, y además requiere el servicio
        GestionEnfermeras dialog = new GestionEnfermeras(
            (java.awt.Dialog) null,   // parent
            true,                     // modal
            enfSvc                    // servicio
        );
        dialog.setLocationRelativeTo(null);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override public void windowClosing(java.awt.event.WindowEvent e) {
                System.exit(0);
            }
        });
        dialog.setVisible(true);
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarE;
    private javax.swing.JButton btnEditarE;
    private javax.swing.JButton btnEliminarE;
    private javax.swing.JButton btnGestionarDisponibilidad;
    private javax.swing.JButton btnListarE;
    private javax.swing.JButton btnVolver;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
