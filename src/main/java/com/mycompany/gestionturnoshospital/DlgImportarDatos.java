package com.mycompany.gestionturnoshospital;

import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.nio.file.*;
import java.nio.charset.StandardCharsets;
import java.io.BufferedReader;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.List;

public class DlgImportarDatos extends javax.swing.JDialog {

    /**
     * Creates new form DlgImportarDatos
     */
    private final EnfermeraService enfSvc;
    private final Hospital hospital;

    public DlgImportarDatos(java.awt.Frame parent, boolean modal,
                        EnfermeraService enfSvc, Hospital hospital) {
        super(parent, modal);
        this.enfSvc = enfSvc;
        this.hospital = hospital;
        initComponents();
        setLocationRelativeTo(parent);
    }
    
    public DlgImportarDatos(java.awt.Frame parent, boolean modal) {
        this(parent, modal,
         GestionTurnosHospital.getEnfSvc(),
         GestionTurnosHospital.getHospital());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnEnfermeras = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        btnEnfermeras1 = new javax.swing.JButton();
        btnEnfermeras2 = new javax.swing.JButton();
        btnEnfermeras3 = new javax.swing.JButton();

        btnEnfermeras.setText("Gestionar Enfermeras");
        btnEnfermeras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnfermerasActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel3.setText("Importar datos");

        btnEnfermeras1.setText("Importar Enfermeras del Sistema");
        btnEnfermeras1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnfermeras1ActionPerformed(evt);
            }
        });

        btnEnfermeras2.setText("Importar Áreas del Sistema ");
        btnEnfermeras2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnfermeras2ActionPerformed(evt);
            }
        });

        btnEnfermeras3.setText("Importar Disponibilidad del Sistema");
        btnEnfermeras3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnfermeras3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEnfermeras1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnfermeras2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEnfermeras3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(btnEnfermeras1)
                .addGap(18, 18, 18)
                .addComponent(btnEnfermeras2)
                .addGap(18, 18, 18)
                .addComponent(btnEnfermeras3)
                .addContainerGap(158, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnfermerasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnfermerasActionPerformed
        System.out.println("click enfermeras");
        GestionEnfermeras e = new GestionEnfermeras(this, true,enfSvc);
        e.setLocationRelativeTo(this);
        e.setVisible(true);

    }//GEN-LAST:event_btnEnfermerasActionPerformed

    private void btnEnfermeras1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnfermeras1ActionPerformed
        Path p = pickCsv("Selecciona enfermeras.csv");
        if (p == null) return;
        try {
            importEnfermeras(p, enfSvc);
            JOptionPane.showMessageDialog(this, "Enfermeras importadas: " + enfSvc.count());
        } catch (Exception ex) {
            showError("Importando enfermeras", ex);
        }
    }//GEN-LAST:event_btnEnfermeras1ActionPerformed
  
    
    private void btnEnfermeras2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnfermeras2ActionPerformed
        Path p = pickCsv("Selecciona areas.csv");
        if (p == null) return;
        try {
            importAreas(p, hospital);
            JOptionPane.showMessageDialog(this, "Áreas importadas: " + hospital.getAreas().size());
        } catch (Exception ex) {
            showError("Importando áreas", ex);
        }
    }//GEN-LAST:event_btnEnfermeras2ActionPerformed

    private void btnEnfermeras3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnfermeras3ActionPerformed
        Path p = pickCsv("Selecciona disponibilidades.csv");
        if (p == null) return;
        try {
            importDisponibilidades(p, enfSvc);
            JOptionPane.showMessageDialog(this, "Disponibilidades importadas (asociadas a enfermeras).");
        } catch (Exception ex) {
            showError("Importando disponibilidades", ex);
        }
    }//GEN-LAST:event_btnEnfermeras3ActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgImportarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgImportarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgImportarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgImportarDatos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgImportarDatos dialog = new DlgImportarDatos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    
    private Path pickCsv(String title) {
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle(title);
        fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fc.setFileFilter(new FileNameExtensionFilter("CSV files", "csv"));
        int r = fc.showOpenDialog(this);
        if (r == JFileChooser.APPROVE_OPTION) {
            Path p = fc.getSelectedFile().toPath();
            if (p.getFileName().toString().toLowerCase().endsWith(".csv")) return p;
            JOptionPane.showMessageDialog(this, "Elige un archivo .csv", "Importar", JOptionPane.WARNING_MESSAGE);
        }
        return null;
    }

    private void showError(String ctx, Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error en " + ctx + ":\n" + ex.getMessage(),
                "Importar datos", JOptionPane.ERROR_MESSAGE);
    }

    // --- CSV parsers (sin librerías externas, compatibles con tus archivos) ---
    public static List<String> splitCsvLine(String line) {
        return Arrays.asList(line.split(",", -1)); // sin comillas/comas embebidas
    }

    public static String sanitizeHeader(String header) {
        if (header == null) return null;
        return header.replace("\uFEFF", "").trim(); 
    }
    
    public static void importEnfermeras(Path csv, EnfermeraService svc) throws IOException {
        try (BufferedReader br = Files.newBufferedReader(csv, StandardCharsets.UTF_8)) {
            String header = br.readLine();
            if (header == null || !header.trim().equalsIgnoreCase("rut,nombre,horasMensualMax,skills")) {
                throw new IOException("Encabezado inesperado en " + csv.getFileName());
            }
            svc.clear();
            String line;
            while ((line = br.readLine()) != null) {
                if (line.isBlank()) continue;
                List<String> t = splitCsvLine(line);
                String rut    = t.get(0).trim();
                String nombre = t.get(1).trim();
                int horas     = Integer.parseInt(t.get(2).trim());
                List<String> skills = new ArrayList<>();
                for (String s : t.get(3).split(";", -1)) {
                    s = s.trim(); 
                    if (!s.isEmpty()) skills.add(s);
                }
                svc.agregar(nombre, rut, skills, horas);
            }
        }
    }

    public static void importAreas(Path csv, Hospital hospital) throws IOException {
        try (BufferedReader br = Files.newBufferedReader(csv, StandardCharsets.UTF_8)) {
            String header = br.readLine();
            if (header == null || !header.trim().equalsIgnoreCase("id,nombre,cuposManana,cuposTarde,cuposNoche,skillsRequeridas")) {
                throw new IOException("Encabezado inesperado en " + csv.getFileName());
            }
            hospital.clearAreas();
            String line;
            while ((line = br.readLine()) != null) {
                if (line.isBlank()) continue;
                List<String> t = splitCsvLine(line);
                int id        = Integer.parseInt(t.get(0).trim());
                String nombre = t.get(1).trim();
                int cm        = Integer.parseInt(t.get(2).trim());
                int ct        = Integer.parseInt(t.get(3).trim());
                int cn        = Integer.parseInt(t.get(4).trim());
                List<String> req = new ArrayList<>();
                for (String s : t.get(5).split(";", -1)) {
                    s = s.trim(); if (!s.isEmpty()) req.add(s);
                }
                hospital.agregarArea(new Area(id, nombre, cm, ct, cn, req));
            }
        }
    }

    public static void importDisponibilidades(Path csv, EnfermeraService svc) throws IOException {
        try (BufferedReader br = Files.newBufferedReader(csv, StandardCharsets.UTF_8)) {
            String header = br.readLine();
            if (header == null) throw new IOException("CSV vacío: " + csv.getFileName());
            String h = header.trim().toLowerCase();
            boolean tieneArea = h.equals("rut,fecha,bloque,area,disponible");
            boolean sinArea   = h.equals("rut,fecha,bloque,disponible");
            if (!tieneArea && !sinArea) {
                throw new IOException("Encabezado inesperado en " + csv.getFileName());
            }
            String line;
            while ((line = br.readLine()) != null) {
                if (line.isBlank()) continue;
                List<String> t = splitCsvLine(line);
                String rut      = t.get(0).trim();
                LocalDate fecha = LocalDate.parse(t.get(1).trim());
                Bloque bloque   = Bloque.valueOf(t.get(2).trim().toUpperCase());
                boolean disp    = Boolean.parseBoolean(t.get(tieneArea ? 4 : 3).trim());
                Enfermera e = svc.buscarPorRut(rut);
                if (e != null) {
                    e.agregarDisponibilidad(new Disponibilidad(fecha, bloque, disp));
                }
            }
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnfermeras;
    private javax.swing.JButton btnEnfermeras1;
    private javax.swing.JButton btnEnfermeras2;
    private javax.swing.JButton btnEnfermeras3;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
