/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.gestionturnoshospital;
import java.util.logging.Logger;

/**
 *
 * @author samuelastudillo
 */
public class DlgEditarEnfermera extends javax.swing.JDialog {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(DlgEditarEnfermera.class.getName());
    private final EnfermeraService enfSvc;

    /**
     * Creates new form DlgEditarEnfermera
     */
    public DlgEditarEnfermera(java.awt.Dialog parent, boolean modal, EnfermeraService enfSvc) {
        super(parent, modal);
        this.enfSvc = enfSvc;
        initComponents();
        configurarRangosYPrecargar();
        pack();
        setLocationRelativeTo(parent);
    }
    private void configurarRangosYPrecargar() {
        int total = enfSvc.count();

    // Índice 1..total (o 0 si no hay)
        spIndice.setModel(new javax.swing.SpinnerNumberModel(
            total > 0 ? 1 : 0,
            total > 0 ? 1 : 0,
            total,
            1
        ));

    // Horas máx (referencia)
        spHorasMax.setModel(new javax.swing.SpinnerNumberModel(160, 0, 400, 1));
        spHorasMax.setEnabled(false);

        if (total > 0) cargarDatosDeIndice(0);
    }
    private void cargarDatosDeIndice(int idx) {
    if (!enfSvc.indiceValido(idx)) return;

    // Si tienes getPorIndice(idx):
    // var e = enfSvc.getPorIndice(idx);

    // Si no, usa listar():
    var e = enfSvc.listar().get(idx);

    // Deja el nombre nuevo vacío (vacío = mantener)
    txtNuevoNombre.setText("");

    // Muestra horas actuales como referencia y deshabilita hasta que marquen el checkbox
    spHorasMax.setValue(e.getHorasMensualMax()); // ajusta al getter real
    chkCambiarHoras.setSelected(false);
    spHorasMax.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        spIndice = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        txtNuevoNombre = new javax.swing.JTextField();
        chkCambiarHoras = new javax.swing.JCheckBox();
        spHorasMax = new javax.swing.JSpinner();
        btnGuardarEditarEnfermera = new javax.swing.JButton();
        btnCancelarEditarEnfermera = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Editar Enfermera");

        jLabel2.setText("Indice:");

        spIndice.setPreferredSize(new java.awt.Dimension(80, 23));

        jLabel3.setText("Nuevo Nombre:");

        txtNuevoNombre.setPreferredSize(new java.awt.Dimension(200, 23));
        txtNuevoNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNuevoNombreActionPerformed(evt);
            }
        });

        chkCambiarHoras.setText("Cambiar Horas Máximas");
        chkCambiarHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCambiarHorasActionPerformed(evt);
            }
        });

        spHorasMax.setEnabled(false);
        spHorasMax.setPreferredSize(new java.awt.Dimension(80, 23));

        btnGuardarEditarEnfermera.setText("Guardar");
        btnGuardarEditarEnfermera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarEditarEnfermeraActionPerformed(evt);
            }
        });

        btnCancelarEditarEnfermera.setText("Cancelar");
        btnCancelarEditarEnfermera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarEditarEnfermeraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNuevoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkCambiarHoras)
                    .addComponent(btnGuardarEditarEnfermera, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelarEditarEnfermera, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spHorasMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(spIndice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNuevoNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCambiarHoras)
                    .addComponent(spHorasMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(81, 81, 81)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarEditarEnfermera, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuardarEditarEnfermera, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNuevoNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNuevoNombreActionPerformed
        if (enfSvc.count() == 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "No hay enfermeras.");
        return;
    }
    int idx = ((Number) spIndice.getValue()).intValue() - 1;
    if (!enfSvc.indiceValido(idx)) {
        javax.swing.JOptionPane.showMessageDialog(this, "Índice inválido.");
        return;
    }

    String nuevoNombre = txtNuevoNombre.getText().trim();
    if (nuevoNombre.isEmpty()) nuevoNombre = null;   // Enter mantiene

    Integer nuevoMax = chkCambiarHoras.isSelected()
            ? ((Number) spHorasMax.getValue()).intValue()
            : null;                                   // mantener

    try {
        enfSvc.editar(idx, nuevoNombre, nuevoMax);
        javax.swing.JOptionPane.showMessageDialog(this, "Enfermera actualizada.");
        dispose();
    } catch (IllegalArgumentException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(),
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_txtNuevoNombreActionPerformed

    private void chkCambiarHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCambiarHorasActionPerformed
        spHorasMax.setEnabled(chkCambiarHoras.isSelected());
    }//GEN-LAST:event_chkCambiarHorasActionPerformed

    private void btnCancelarEditarEnfermeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarEditarEnfermeraActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarEditarEnfermeraActionPerformed

    private void btnGuardarEditarEnfermeraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarEditarEnfermeraActionPerformed
        if (enfSvc.count() == 0) {
        javax.swing.JOptionPane.showMessageDialog(this, "No hay enfermeras.");
        return;
    }
    int idx = ((Number) spIndice.getValue()).intValue() - 1;
    if (!enfSvc.indiceValido(idx)) {
        javax.swing.JOptionPane.showMessageDialog(this, "Índice inválido.");
        return;
    }

    String nuevoNombre = txtNuevoNombre.getText().trim();
    if (nuevoNombre.isEmpty()) nuevoNombre = null;  // mantener

    Integer nuevoMax = chkCambiarHoras.isSelected()
            ? ((Number) spHorasMax.getValue()).intValue()
            : null;                                   // mantener

    try {
        enfSvc.editar(idx, nuevoNombre, nuevoMax);
        javax.swing.JOptionPane.showMessageDialog(this, "Enfermera actualizada.");
        dispose();
    } catch (IllegalArgumentException ex) {
        javax.swing.JOptionPane.showMessageDialog(this, ex.getMessage(),
                "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_btnGuardarEditarEnfermeraActionPerformed
    private void spIndiceStateChanged(javax.swing.event.ChangeEvent evt) {                                    
        int idx = ((Number) spIndice.getValue()).intValue() - 1;
        cargarDatosDeIndice(idx);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
    try {
        for (var info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (Exception ex) {
        Logger.getLogger(DlgEditarEnfermera.class.getName())
              .log(java.util.logging.Level.SEVERE, null, ex);
    }

    java.awt.EventQueue.invokeLater(() -> {
        EnfermeraService enfSvc = new EnfermeraService(); 
        DlgEditarEnfermera dialog = new DlgEditarEnfermera(
            (java.awt.Dialog) null,  
            true,                     
            enfSvc                    
        );
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override public void windowClosing(java.awt.event.WindowEvent e) {
                System.exit(0);
            }
        });
        dialog.setLocationRelativeTo(null);
        dialog.setVisible(true);
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarEditarEnfermera;
    private javax.swing.JButton btnGuardarEditarEnfermera;
    private javax.swing.JCheckBox chkCambiarHoras;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSpinner spHorasMax;
    private javax.swing.JSpinner spIndice;
    private javax.swing.JTextField txtNuevoNombre;
    // End of variables declaration//GEN-END:variables
}
