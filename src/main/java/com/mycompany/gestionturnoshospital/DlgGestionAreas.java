/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.gestionturnoshospital;

/**
 *
 * @author simon
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;
public class DlgGestionAreas extends javax.swing.JDialog {

    /**
     * Creates new form DlgGestionAreas
     */
    private final Hospital hospital;
    public DlgGestionAreas(java.awt.Frame parent, boolean modal, Hospital hospital) {
        super(parent, modal);
        this.hospital = hospital;
        initComponents();
        setLocationRelativeTo(parent);
        configurarTabla();
        cargarAreas();
        jButton1.addActionListener(e -> btnAgregarActionPerformed(e));  
        jButton2.addActionListener(e -> btnEditarActionPerformed(e));   
        jButton3.addActionListener(e -> btnEliminarActionPerformed(e)); 
        jButton4.addActionListener(e -> btnVolverActionPerformed(e));   
    }
    public DlgGestionAreas(java.awt.Frame parent, boolean modal) {
        this(parent, modal, GestionTurnosHospital.getHospital());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    private void configurarTabla(){
        jTable1.setModel(new DefaultTableModel(
                new Object[][]{}, 
                new String[]{"ID", "Nombre", "Mañana", "Tarde", "Noche", "Skills"}
        ){
           @Override public boolean isCellEditable(int r, int c){ return false; }
        });
    }
    private void cargarAreas(){
        DefaultTableModel m = (DefaultTableModel) jTable1.getModel();
        m.setRowCount(0);
        for(Area a : hospital.getAreas()){
            m.addRow(new Object[]{
                a.getId(), a.getNombre(),
                a.getCuposManana(), a.getCuposTarde(), a.getCuposNoche(),
                String.join(";", a.getSkillsRequeridas())
            });       
        }     
    }
    
    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt){
        AreaFormData d = pedirDatosArea(null);
        if (d == null) return;
        try {
            for (Area a : hospital.getAreas())
                if (a.getId() == d.id) throw new IllegalArgumentException("ID ya existe");
            Area nueva = new Area(d.id, d.nombre, d.cupM, d.cupT, d.cupN, d.skills);
            hospital.agregarArea(nueva);
            cargarAreas();
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }
    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt){
        int row = jTable1.getSelectedRow();
        if (row < 0) { JOptionPane.showMessageDialog(this, "Selecciona un area."); return; }
        Area actual = hospital.getAreas().get(row);
        AreaFormData d = pedirDatosArea(actual);
        if (d == null) return;
        try {
            actual.setNombre(d.nombre);
            actual.setCuposManana(d.cupM);
            actual.setCuposTarde(d.cupT);
            actual.setCuposNoche(d.cupN);
            actual.setSkillsRequeridas(d.skills);
            cargarAreas();
        } catch (Exception ex){
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
        }
    }
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt){
        int row = jTable1.getSelectedRow();
        if (row < 0) { JOptionPane.showMessageDialog(this, "Selecciona un área."); return; }

        if (JOptionPane.showConfirmDialog(this, "¿Eliminar área?", "Confirmar",
            JOptionPane.YES_NO_OPTION) != JOptionPane.YES_OPTION) return;

        Area eliminada = hospital.eliminarAreaPorIndice(row);  // ✅ usa el método del Hospital
        if (eliminada == null) {
            JOptionPane.showMessageDialog(this, "Índice inválido.");
            return;
        }
        cargarAreas();  // refresca la tabla
        JOptionPane.showMessageDialog(this, "Área eliminada: " + eliminada.getNombre());
        }
        private void btnVolverActionPerformed(java.awt.event.ActionEvent evt){
            dispose();
    }

    
    
    
    private static class AreaFormData {
        Integer id, cupM, cupT, cupN;
        String nombre;
        List<String> skills;
    }

    private AreaFormData pedirDatosArea(Area base) {
        JTextField tfId = new JTextField(base == null ? "" : String.valueOf(base.getId()));
        JTextField tfNombre = new JTextField(base == null ? "" : base.getNombre());
        JTextField tfM = new JTextField(base == null ? "" : String.valueOf(base.getCuposManana()));
        JTextField tfT = new JTextField(base == null ? "" : String.valueOf(base.getCuposTarde()));
        JTextField tfN = new JTextField(base == null ? "" : String.valueOf(base.getCuposNoche()));
        JTextField tfSkills = new JTextField(
            base == null ? "" : String.join(";", base.getSkillsRequeridas())
        );

        JPanel p = new JPanel(new java.awt.GridLayout(0,2,6,6));
        p.add(new JLabel("ID:")); p.add(tfId);
        p.add(new JLabel("Nombre:")); p.add(tfNombre);
        p.add(new JLabel("Cupos Mañana:")); p.add(tfM);
        p.add(new JLabel("Cupos Tarde:")); p.add(tfT);
        p.add(new JLabel("Cupos Noche:")); p.add(tfN);
        p.add(new JLabel("Skills (;):")); p.add(tfSkills);

        int r = JOptionPane.showConfirmDialog(null, p,
                (base==null?"Agregar Área":"Editar Área"), JOptionPane.OK_CANCEL_OPTION);
        if (r != JOptionPane.OK_OPTION) return null;

        try {
            AreaFormData out = new AreaFormData();
            out.id = Integer.parseInt(tfId.getText().trim());
            out.nombre = tfNombre.getText().trim();
            out.cupM = Integer.parseInt(tfM.getText().trim());
            out.cupT = Integer.parseInt(tfT.getText().trim());
            out.cupN = Integer.parseInt(tfN.getText().trim());
            String raw = tfSkills.getText().trim();
            out.skills = new java.util.ArrayList<>();
            if (!raw.isEmpty()) {
                for (String s : raw.split(";")) {
                    s = s.trim();
                    if (!s.isEmpty()) out.skills.add(s);
                }
            }
            if (out.nombre.isEmpty()) throw new IllegalArgumentException("Nombre vacío");
            return out;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Datos inválidos: " + ex.getMessage());
            return null;
        }
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Editar");

        jButton3.setText("Eliminar");

        jButton4.setText("Cerrar");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgGestionAreas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgGestionAreas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgGestionAreas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgGestionAreas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgGestionAreas dialog = new DlgGestionAreas(new javax.swing.JFrame(),true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
